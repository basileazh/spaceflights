# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html

##### ----- RAW ----- #####

companies:
  type: pandas.CSVDataSet
  filepath: data/01_raw/companies.csv
  layer: raw

reviews:
  type: pandas.CSVDataSet
  filepath: data/01_raw/reviews.csv
  layer: raw

shuttles:
  type: pandas.ExcelDataSet
  filepath: data/01_raw/shuttles.xlsx
  layer: raw

data_processing.companies_columns:
  type: tracking.JSONDataSet
  filepath: data/09_tracking/companies_columns.json
  layer: raw


##### ----- 02 INTERMEDIATE ----- #####

data_science.preprocessed_companies:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/preprocessed_companies.csv
  layer: intermediate

data_science.preprocessed_shuttles:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/preprocessed_shuttles.csv
  layer: intermediate

data_processing.shuttle_passenger_capacity_plot:
  type: plotly.PlotlyDataSet
  filepath: data/08_reporting/shuttle_passenger_capacity_plot.json
  plotly_args:
    type: bar
    fig:
      x: shuttle_type
      y: passenger_capacity
      orientation: h
    layout:
      xaxis_title: Shuttles
      yaxis_title: Average passenger capacity
      title: Shuttle Passenger capacity


##### -----  03 PRIMARY ----- #####


model_input_table:
  type: pandas.CSVDataSet
  filepath: data/03_primary/model_input_table.csv
  layer: primary



##### ----- 05 MODEL INPUT -----#####

# X_train
data_science.active_modelling_pipeline.X_train:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/active_X_train.pq
  layer: model_input

data_science.candidate_modelling_pipeline.X_train:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/candidate_X_train.pq
  layer: model_input

# X_test
data_science.active_modelling_pipeline.X_test:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/active_X_test.pq
  layer: model_input

data_science.candidate_modelling_pipeline.X_test:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/candidate_X_test.pq
  layer: model_input

# y_train
data_science.active_modelling_pipeline.y_train:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/active_y_train.pq
  layer: model_input

data_science.candidate_modelling_pipeline.y_train:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/candidate_y_train.pq
  layer: model_input

# y_test
data_science.active_modelling_pipeline.y_test:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/active_y_test.pq
  layer: model_input

data_science.candidate_modelling_pipeline.y_test:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/05_model_input/candidate_y_test.pq
  layer: model_input


##### ----- 06 MODELS -----#####

# Regressors
data_science.active_modelling_pipeline.regressor_artifact:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pickle.PickleDataSet
    filepath: data/06_models/regressor_active.pickle
  layer: models

data_science.candidate_modelling_pipeline.regressor_artifact:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pickle.PickleDataSet
    filepath: data/06_models/regressor_candidate.pickle
  layer: models

data_science.active_modelling_pipeline.regressor_model:
  type: kedro_mlflow.io.models.MlflowModelLoggerDataSet
  flavor: mlflow.sklearn
  save_args:
      conda_env:
          python: "3.9"
          dependencies:
              - "kedro==0.18.3"
  layer: models

data_science.candidate_modelling_pipeline.regressor_model:
  type: kedro_mlflow.io.models.MlflowModelLoggerDataSet
  flavor: mlflow.sklearn
  save_args:
      conda_env:
          python: "3.9"
          dependencies:
              - "kedro==0.18.3"
  layer: models

# Metrics
data_science.active_modelling_pipeline.metrics:
  type: kedro_mlflow.io.metrics.MlflowMetricsDataSet
  layer: models

data_science.candidate_modelling_pipeline.metrics:
  type: kedro_mlflow.io.metrics.MlflowMetricsDataSet
  layer: models

#data_science.active_modelling_pipeline.metrics_json:
#  type: tracking.MetricsDataSet
#  filepath: data/09_tracking/metrics_active.json
#  layer: models
#
#data_science.candidate_modelling_pipeline.metrics_json:
#  type: tracking.MetricsDataSet
#  filepath: data/09_tracking/metrics_candidate.json
#  layer: models

##### ----- 06 MODEL OUTPUTS ----- #####

data_science.active_modelling_pipeline.test_prediction:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/07_model_output/active_test_prediction.pq
  layer: models

data_science.candidate_modelling_pipeline.test_prediction:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataSet
  data_set:
    type: pandas.ParquetDataSet
    filepath: data/07_model_output/candidate_test_prediction.pq
  layer: models